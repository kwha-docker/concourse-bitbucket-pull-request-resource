#!/usr/bin/env python3

import subprocess
import os
import sys
import json
import traceback
from datetime import datetime
from bitbucket import (
    json_pp, err, request_access_token, get_prs, BitbucketException, get_diff
)
from utils import greater_than_days_cutoff

j = json.loads(sys.stdin.read())
debug = j['source'].get('debug', False)

# Configuration vars
project = j['source']['project']
repo = j['source']['repo']
client_id = j['source']['client_id']
secret = j['source']['secret']
state = j['source'].get('state','OPEN')
pages = j['source'].get('pages', 3)
pagelen = j['source'].get('pagelen', 50)
diff = j['source'].get('return_diff', False)
time_cutoff = j['source'].get('time_cutoff', 14) # Number of days for cutoff

# Get the access token for the repo and get the open PRs
try:
    access_token = request_access_token(client_id, secret, debug)
    pr_request, request_count = get_prs(project, repo, access_token,
                                        debug, state=state, next_page=True,
                                        pages=pages, pagelen=pagelen)
except BitbucketException:
    traceback.print_exc()
    err(str(e))
    exit(1)

result = []
for pr in pr_request:
    pr_info = {
        "pr_no": str(pr["id"]),
        "commit": str(pr['source']['commit']['hash'][:16]),
        "repo": str(pr['source']['repository']['name']),
        "state": str(pr['state']),
    }

    if greater_than_days_cutoff(pr['updated_on'], time_cutoff):
        err('PR {} latest update is older than {} days. Not passing down.'
            .format(pr_info['pr_no'], time_cutoff))
        continue

    if diff:
        diff_result = len(get_diff(project, repo, access_token, pr['id']))
        pr_info["diff"] = str(diff_result)
    result.append(pr_info)


print(json.dumps(result[::-1], indent=2))
